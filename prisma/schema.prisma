// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Publisher {
  index       Int       @id @default(autoincrement())
  name        String
  description String    @default("")
  url         String
  token       String    @default("")
  packages    Package[]
}

model Package {
  index          Int              @id @default(autoincrement())
  name           String
  description    String           @default("")
  readme         String           @default("")
  identifier     String           @unique
  url            String
  docUrl         String           @default("")
  type           String           @default("ane")
  published      Boolean          @default(false)
  publishedAt    DateTime         @default(now())
  publisher      Publisher        @relation(fields: [publisherIndex], references: [index])
  publisherIndex Int
  tags           Tag[]
  versions       PackageVersion[]
}

model PackageVersion {
  index        Int         @id @default(autoincrement())
  package      Package     @relation(fields: [packageIndex], references: [index])
  packageIndex Int
  sourceUrl    String
  checksum     String      @default("")
  version      String      @default("0.0.0")
  published    Boolean     @default(false)
  publishedAt  DateTime    @default(now())
  parameters   Parameter[]


  dependencies PackageVersion[] @relation("Dependencies", references: [index])
  requiredBy   PackageVersion[] @relation("Dependencies", references: [index])

  @@unique(fields: [version, packageIndex], name: "packageVersionId")
}

model Parameter {
  index        Int     @id @default(autoincrement())
  name         String
  required     Boolean @default(false)
  defaultValue String  @default("")

  packageVersions PackageVersion[]

  @@unique(fields: [name, required], name: "nameRequired")
}

model Tag {
  index    Int       @id @default(autoincrement())
  name     String    @unique
  packages Package[]
}
